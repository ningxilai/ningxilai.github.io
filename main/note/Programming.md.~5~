Posted on February 13, 2025

# Emacs

Distro: [seagle0128/CentaurEmacs](https://seagle0128.github.io/.emacs.d)

## Programming

### Haskell

``` elisp
(use-package haskell-mode
  :ensure t
  :hook
  (haskell-mode . interactive-haskell-mode)
  (haskell-mode . haskell-indentation-mode)
  )

(use-package lsp-haskell
  :ensure t
)
```

`init.el`:

``` elisp
(add-hook 'haskell-mode-hook #'lsp)
(add-hook 'haskell-literate-mode-hook #'lsp)
```

### Symbolic Algebra

#### Julia

``` sourceCode
curl -fsSL https://install.julialang.org | sh
```

``` elisp
;; julia-snail
(use-package julia-snail
  :ensure t
  :config (setq julia-snail-executable "~/.juliaup/bin/"))
```

#### SPAD && FriCAS

见于 [euclideanspace.com/](http://euclideanspace.com/prog/scratchpad/spad/index.htm) 。

``` sourceCode
sudo pacman -S sbcl
git clone --depth=1 git@github.com:fricas/fricas.git
cd fricas
./configure
make
sudo make install
```

#### Idris2 && Pack

``` sourceCode
git clone --depth=1 git@github.com:racket/ChezScheme.git
cd ChezScheme
./configure --threads
make
sudo make install
```

``` sourceCode
git clone --depth=1 git@github.com:stefan-hoeck/idris2-pack.git
cd idris2-pack
./install.sh
```

``` sourceCode
export PATH=$PATH:~/.pack/bin
```

#### Agda

``` sourceCode
cabal update
cabal install Agda

wget -O agda-stdlib.tar.gz https://github.com/agda/agda-stdlib/archive/v2.2.tar.gz
tar -xvf agda-stdlib.tar.gz

cd agda-stdlib-2.2
cabal install
```

## CommonLisp && Roswell

``` sourceCode
sudo pacman -S rlwrap

git clone -b release https://github.com/roswell/roswell.git
cd roswell
sh bootstrap
./configure --prefix=$HOME/.local
make
make install
echo 'PATH=$HOME/.local/bin:$PATH' >> ~/.zshrc

ros setup
ros lisp=sbcl-bin/system setup
ros install qlot
```

### lem

``` sourceCode
sudo pacman -S sdl2 sdl2_ttf sdl2_image

mkdir $HOME/common-lisp
cd common-lisp
git clone --depth=1 https://github.com/lem-project/lem.git
cd lem
make sdl2
```

## SICP

``` sourceCode
mkdir -p  ~/.config/emacs/quack/
cd ./.config/emacs/quack/
wget2 https://www.neilvandyke.org/quack/quack.el
```

## 范畴论/Haskell函数式程序设计

关于范畴论的兴趣来源于我的语言学爱好，由于我语言学上最初的启发是乔姆斯基，为了了解他著作中的一些概念，后来又购置了一本数理哲学，始终未曾翻阅，此后不断地了解程序语言设计领域的话题，又打算重新了解一番当代语言学中数学工具发展的脉络。使用haskell也是因为这种语言相较于lisp更贴合范畴论的实践。

具体配置haskell开发环境的指北见于USTC的mirrors,不再赘述。

## Typesetting

### typst

``` elisp
(use-package websocket
  :ensure t)

(use-package lsp-mode
  :ensure t)

(use-package typst-ts-mode
  :vc (:url "https://codeberg.org/meow_king/typst-ts-mode" :branch "develop")
  :custom
  ;; don't add "--open" if you'd like `watch` to be an error detector
  ;; (typst-ts-watch-options "--open")

  (typst-ts-mode-grammar-location (expand-file-name "tree-sitter/libtree-sitter-typst.so" user-emacs-directory))
  (typst-ts-mode-enable-raw-blocks-highlight t)
  :config
  (keymap-set typst-ts-mode-map "C-c C-c" #'typst-ts-tmenu)
  ;; make sure to install typst-lsp from
  ;; https://github.com/nvarner/typst-lsp/releases
  ;; or use tinymist
  (add-to-list 'lsp-language-id-configuration '(typst-ts-mode . "typst"))
  (lsp-register-client
   (make-lsp-client
    :new-connection (lsp-stdio-connection "tinymist")
    :major-modes '(typst-ts-mode)
    :server-id 'tinymist)))

(use-package tip
  :vc (:url "https://git.sr.ht/~mafty/tip"))
```

``` sourceCode
git clone --depth 1 https://git.sr.ht/~mafty/tip-server-py
cd tip-server-py
pip install -r requirements.txt
```

### LaTeX

#### Maxima

`maxima`内有`tex`函数，可将在其内部的表达式转化为合法的LaTeX形式给出。

``` sourceCode
tex(sqrt(2)-sqrt(3))
```

### Rust && Cargo:Typesetting Package/Emacs

``` sourceCode
cargo install font-manager
```

github:[e-ricus/font-manager-cli](https://github.com/e-ricus/font-manager-cli).

``` sourceCode
cargo install --git https://github.com/typst/typst.git --locked typst-cli
```

``` sourceCode
cargo install --git https://github.com/Myriad-Dreamin/tinymist --locked tinymist
```

``` sourceCode
git clone --depth 1 https://github.com/uben0/tree-sitter-typst
cd tree-sitter-typst/src

cc -fPIC -std=c99 -c parser.c
cc -fPIC -std=c99 -c scanner.c
cc -shared parser.o scanner.o -o libtree-sitter-typst.so

# to emacs
mkdir tree-sitter
cd tree-sitter
mv libtree-sitter-typst ./
```

## APL/Uiua

``` sourceCode
cargo install --git https://github.com/uiua-lang/uiua uiua -F full
```

## Typesetting on VSC

``` sourceCode
sudo pacman -S code && ext install myriad-dreamin.tinymist
```

# Tools(Rust && Haskell)

## Artem

``` bash
cargo install artem
```

## fish

```bash
cargo install --git https://github.com/fish-shell/fish-shell --locked
```

### fisher

```bash
git clone --depth=1 https://github.com/jorgebucaran/fisher.git && cd fisher/functions
```

```fish
source
fisher install ../
```

## mdbook

``` bash
cargo install mdbook
```

### book.toml

``` toml
[book]
authors = ["ningxilai"]
language = "zh_CN"
multilingual = false
src = "src"
title = "Iris's Note Book"

[output.html]
mathjax-support = true
git-repository-url = "https://github.com/ningxilai/ningxilai.github.io"
git-repository-icon = "fa-github"

[output.html.playground]
editable = true
line-numbers = true

[output.html.search]
limit-results = 20
use-boolean-and = true
boost-title = 2
boost-hierarchy = 2
boost-paragraph = 1
expand = true
heading-split-level = 2
```

## Typst

``` bash
typst watch --features html
## or
TYPST_FEATURES=html
```

## Hakyll

``` bash
hakyll-init -f ./
```

## LunarVim

``` bash
## Cargo
cargo install --git https://github.com/sharkdp/fd
cargo install ripgrep
cargo install neovide
## Fonts
git clone --depth=1 https://github.com/ryanoasis/nerd-fonts ~/.local/share/fonts
## Pacman
sudo pacman -S nodejs tree-sitter-cli
## Install
git clone --depth=1 https://github.com/lunarvim/lunarvim.git ~/.local/share/lunarvim/lvim
cd ~/.local/share/lunarvim/lvim/
sh utils/installer/install.sh
```

### Neovide

``` bash
vi .config/neovide/config.toml
## => 
neovim-bin = ".local/bin/lvim"
```
### CSS

``` css
html,body {
	background: white;
	scroll-behavior: smooth;
	color: black;
	font-family: monospace;
	font-size: 16px;
	line-height: 1.4;
	min-height: 100%;
	overflow-wrap: break-word;
	font-family: "Fira Code","LXGW WenKai",sans-serif
}

body {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 45%;
	margin: 0;
	padding: 0;
	text-align: left
}

.post-meta {
	text-align: right
}

h1,h2,h3,h4,h5,h6 {
	font-weight: normal
}

h2,h3 {
	margin-top: 3rem
}

h4,h5 {
	margin-top: 1.8rem
}

h6 {
	margin-top: 0.8rem
}

hr {
	margin: 2rem 0
}

p {
	margin: 1rem 0
}

li {
	margin: 0.4rem 0
}

*:target {
	background: yellow
}

.w {
	max-width: 640px;
	margin: 0 auto;
	padding: 4rem 2rem
}

hr {
	text-align: center;
	border: 0
}

hr:before {
	content: "/////"
}

hr:after {
	content: attr(data-content) "/////"
}

table {
	width: 40%;
	border: 0px
}

table,th,td {
	border-collapse: collapse;
	padding: 0.4rem
}

code {
	color: white;
	background: black
}

div.highlighter-rouge code {
	display: block;
	overflow-x: auto;
	white-space: pre-wrap;
	padding: 1rem
}

blockquote {
	font-style: italic;
	border: thin solid black;
	padding: 1rem
}

blockquote p {
	margin: 0
}

img {
	max-width: 100%;
	display: block;
	margin: 0 auto
}
```

``` html

<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Home</title>        
        <link rel="stylesheet" href="./css/default.css" />
        <link href="https://cdn.bootcdn.net/ajax/libs/firacode/6.2.0/ttf/FiraCode-Bold.ttf" rel="stylesheet">
        <link href="https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-webfont/1.7.0/files/lxgwwenkai-bold-subset-100.woff2" rel="stylesheet">
    </head>
    <body>

        <main role="main">
            <h1>Home</h1>
            <header>
  <div class="logo">
    <a href="./">Iris's Blog</a>
  </div>
</header>

<body> body  </body>

<footer>
  Site proudly generated by
  <a href="http://jaspervdj.be/hakyll">Hakyll</a>,
  Site <code>.css</code> file generated from the <code>.sass</code> files of <a href="https://github.com/riggraz/no-style-please">riggraz/no-style-please</a>.
</footer>

        </main>
     
    </body>
</html>
```
