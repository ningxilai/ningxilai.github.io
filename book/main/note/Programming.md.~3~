# Note

Posted on February 13, 2025

# Emacs

Distro: [seagle0128/CentaurEmacs](https://seagle0128.github.io/.emacs.d)

## Programming

### Haskell

``` elisp
(use-package haskell-mode
  :ensure t
  :hook
  (haskell-mode . interactive-haskell-mode)
  (haskell-mode . haskell-indentation-mode)
  )

(use-package lsp-haskell
  :ensure t
)
```

`init.el`:

``` elisp
(add-hook 'haskell-mode-hook #'lsp)
(add-hook 'haskell-literate-mode-hook #'lsp)
```

### Symbolic Algebra

#### Julia

``` sourceCode
curl -fsSL https://install.julialang.org | sh
```

``` elisp
;; julia-snail
(use-package julia-snail
  :ensure t
  :config (setq julia-snail-executable "~/.juliaup/bin/"))
```

#### SPAD && FriCAS

见于
[euclideanspace.com/](http://euclideanspace.com/prog/scratchpad/spad/index.htm)
。

``` sourceCode
sudo pacman -S sbcl
git clone --depth=1 git@github.com:fricas/fricas.git
cd fricas
./configure
make
sudo make install
```

#### Idris2 && Pack

``` sourceCode
git clone --depth=1 git@github.com:racket/ChezScheme.git
cd ChezScheme
./configure --threads
make
sudo make install
```

``` sourceCode
git clone --depth=1 git@github.com:stefan-hoeck/idris2-pack.git
cd idris2-pack
./install.sh
```

``` sourceCode
export PATH=$PATH:~/.pack/bin
```

#### Agda

``` sourceCode
cabal update
cabal install Agda

wget -O agda-stdlib.tar.gz https://github.com/agda/agda-stdlib/archive/v2.2.tar.gz
tar -xvf agda-stdlib.tar.gz

cd agda-stdlib-2.2
cabal install
```

## CommonLisp && Roswell

``` sourceCode
sudo pacman -S rlwrap

git clone -b release https://github.com/roswell/roswell.git
cd roswell
sh bootstrap
./configure --prefix=$HOME/.local
make
make install
echo 'PATH=$HOME/.local/bin:$PATH' >> ~/.zshrc

ros setup
ros lisp=sbcl-bin/system setup
ros install qlot
```

### lem

``` sourceCode
sudo pacman -S sdl2 sdl2_ttf sdl2_image

mkdir $HOME/common-lisp
cd common-lisp
git clone --depth=1 https://github.com/lem-project/lem.git
cd lem
make sdl2
```

## SICP

``` sourceCode
mkdir -p  ~/.config/emacs/quack/
cd ./.config/emacs/quack/
wget2 https://www.neilvandyke.org/quack/quack.el
```

## 范畴论/Haskell函数式程序设计

关于范畴论的兴趣来源于我的语言学爱好，由于我语言学上最初的启发是乔姆斯基，为了了解他著作中的一些概念，后来又购置了一本数理哲学，始终未曾翻阅，此后不断地了解程序语言设计领域的话题，又打算重新了解一番当代语言学中数学工具发展的脉络。使用haskell也是因为这种语言相较于lisp更贴合范畴论的实践。

具体配置haskell开发环境的指北见于USTC的mirrors,不再赘述。

## Typesetting

### typst

``` elisp
(use-package websocket
  :ensure t)

(use-package lsp-mode
  :ensure t)

(use-package typst-ts-mode
  :vc (:url "https://codeberg.org/meow_king/typst-ts-mode" :branch "develop")
  :custom
  ;; don't add "--open" if you'd like `watch` to be an error detector
  ;; (typst-ts-watch-options "--open")

  (typst-ts-mode-grammar-location (expand-file-name "tree-sitter/libtree-sitter-typst.so" user-emacs-directory))
  (typst-ts-mode-enable-raw-blocks-highlight t)
  :config
  (keymap-set typst-ts-mode-map "C-c C-c" #'typst-ts-tmenu)
  ;; make sure to install typst-lsp from
  ;; https://github.com/nvarner/typst-lsp/releases
  ;; or use tinymist
  (add-to-list 'lsp-language-id-configuration '(typst-ts-mode . "typst"))
  (lsp-register-client
   (make-lsp-client
    :new-connection (lsp-stdio-connection "tinymist")
    :major-modes '(typst-ts-mode)
    :server-id 'tinymist)))

(use-package tip
  :vc (:url "https://git.sr.ht/~mafty/tip"))
```

``` sourceCode
git clone --depth 1 https://git.sr.ht/~mafty/tip-server-py
cd tip-server-py
pip install -r requirements.txt
```

### LaTeX

#### Maxima

`maxima`内有`tex`函数，可将在其内部的表达式转化为合法的LaTeX形式给出。

``` sourceCode
tex(sqrt(2)-sqrt(3))
```

### Rust && Cargo:Typesetting Package/Emacs

``` sourceCode
cargo install font-manager
```

github:[e-ricus/font-manager-cli](https://github.com/e-ricus/font-manager-cli).

``` sourceCode
cargo install --git https://github.com/typst/typst.git --locked typst-cli
```

``` sourceCode
cargo install --git https://github.com/Myriad-Dreamin/tinymist --locked tinymist
```

``` sourceCode
git clone --depth 1 https://github.com/uben0/tree-sitter-typst
cd tree-sitter-typst/src

cc -fPIC -std=c99 -c parser.c
cc -fPIC -std=c99 -c scanner.c
cc -shared parser.o scanner.o -o libtree-sitter-typst.so

# to emacs
mkdir tree-sitter
cd tree-sitter
mv libtree-sitter-typst ./
```

## APL/Uiua

``` sourceCode
cargo install --git https://github.com/uiua-lang/uiua uiua -F full
```

## Typesetting on VSC

``` sourceCode
sudo pacman -S code && ext install myriad-dreamin.tinymist
```

# BlogTools

## Artem

``` sourceCode
cargo install artem
```

## Hakyll

``` sourceCode
hakyll-init -f ./
```

## Typst

``` sourceCode
typst watch --features html
## or
TYPST_FEATURES=html
```
